<?xml version="1.0" encoding="UTF-8"?>
<!--
  JAUS Service Interface Definition Language - Plus (JSIDL+v0.11)
  
-->
<!--
  JSIDL+ only adds to JSIDL and does not modify or remove anything that already exists in JSIDL
  additions are the following:
  1. service_set element
  2. In state and default_state, default_transition's multiplicity has been changed from ? to * to include the case of multiple guarded default transitions
  3. Added internal_transition. 
      Semantics: While a self transition is considered to be a change of state, an internal transition is not. 
                        In a self transition, the source state and the target state are the same. In this case, all entry and exit actions are invoked, and a change of state is said to occur.
                        In an internal transition, there is no target state. In this case, events can trigger actions on the transition, but no entry or exit actions are invoked, and no change of state will occur.
  4. Added mxCell element and sub-elements
  5. changed parameter's type from identifier_ns to param_type to include primitive unsigned types
  6. added a name attribute to type_and_units_enum
  7. added the missing "optional" attribute to declared_variant
  8. added optional default_state to state_machine and converted multiplicity of  state in state_machine from one-or-more to zero-or-more 
      Semantics: state_machine may contain zero states IFF a default state is present 
  
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:jaus:jsidl:1.0" xmlns:version_1_1="urn:jaus:jsidl:1.1" xmlns:plus="urn:jaus:jsidl:plus" xmlns:ns1="urn:jaus:jsidl:1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:import namespace="urn:jaus:jsidl:1.1" schemaLocation="version_1_1.xsd"/>
  <xs:import namespace="urn:jaus:jsidl:plus" schemaLocation="plus.xsd"/>
  <xs:element name="service_def" type="ns1:tp_service_def"/>
  <xs:complexType name="tp_service_def">
    <xs:sequence>
      <xs:element ref="ns1:description"/>
      <xs:element ref="ns1:assumptions"/>
      <xs:element minOccurs="0" ref="ns1:references"/>
      <xs:element minOccurs="0" ref="ns1:declared_const_set"/>
      <xs:element minOccurs="0" ref="ns1:declared_type_set"/>
      <xs:element ref="ns1:message_set"/>
      <xs:element ref="ns1:internal_events_set"/>
      <xs:element ref="ns1:protocol_behavior"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" use="required" type="xs:anyURI"/>
    <xs:attribute name="version" use="required" type="ns1:version_num"/>
  </xs:complexType>
  <xs:element name="description" type="ns1:tp_description"/>
  <xs:complexType name="tp_description" mixed="true">
    <xs:attribute ref="xml:space"/>
  </xs:complexType>
  <xs:element name="assumptions" type="ns1:tp_assumptions"/>
  <xs:complexType name="tp_assumptions" mixed="true">
    <xs:attribute ref="xml:space"/>
  </xs:complexType>
  <xs:element name="references" type="ns1:tp_references"/>
  <xs:complexType name="tp_references">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:inherits_from"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:client_of"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="inherits_from" type="ns1:tp_inherits_from"/>
  <xs:complexType name="tp_inherits_from">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" use="required" type="xs:anyURI"/>
    <xs:attribute name="version" use="required" type="ns1:version_num_ref"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="client_of" type="ns1:tp_client_of"/>
  <xs:complexType name="tp_client_of">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" use="required" type="xs:anyURI"/>
    <xs:attribute name="version" use="required" type="ns1:version_num_ref"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <!-- ==================== declared constants =========================== -->
  <xs:element name="declared_const_set" type="ns1:tp_declared_const_set"/>
  <xs:complexType name="tp_declared_const_set">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:declared_const_set_ref"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:const_def"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" type="xs:anyURI"/>
    <xs:attribute name="version" type="ns1:version_num"/>
  </xs:complexType>
  <xs:element name="declared_const_set_ref" type="ns1:tp_declared_const_set_ref"/>
  <xs:complexType name="tp_declared_const_set_ref">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" use="required" type="xs:anyURI"/>
    <xs:attribute name="version" use="required" type="ns1:version_num"/>
  </xs:complexType>
  <xs:element name="const_def" type="ns1:tp_const_def"/>
  <xs:complexType name="tp_const_def">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attributeGroup ref="ns1:attribute_field_units"/>
    <xs:attribute name="const_type" use="required" type="ns1:tp_const_type"/>
    <xs:attribute name="const_value" use="required" type="xs:string"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_const_type">
    <xs:restriction base="xs:token">
      <xs:enumeration value="byte"/>
      <xs:enumeration value="short integer"/>
      <xs:enumeration value="integer"/>
      <xs:enumeration value="long integer"/>
      <xs:enumeration value="unsigned byte"/>
      <xs:enumeration value="unsigned short integer"/>
      <xs:enumeration value="unsigned integer"/>
      <xs:enumeration value="unsigned long integer"/>
      <xs:enumeration value="float"/>
      <xs:enumeration value="long float"/>
      <xs:enumeration value="string"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- ==================== declared data types =========================== -->
  <xs:element name="declared_type_set" type="ns1:tp_declared_type_set"/>
  <xs:complexType name="tp_declared_type_set">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:declared_const_set_ref"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="declared_type_set_ref" type="ns1:tp_declared_type_set_ref"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="ns1:message_def"/>
        <xs:element ref="ns1:header"/>
        <xs:element ref="ns1:body"/>
        <xs:element ref="ns1:footer"/>
        <xs:element ref="ns1:array"/>
        <xs:element ref="ns1:record"/>
        <xs:element ref="ns1:list"/>
        <xs:element ref="ns1:variant"/>
        <xs:element ref="ns1:sequence"/>
        <xs:element ref="ns1:fixed_field"/>
        <xs:element ref="ns1:variable_field"/>
        <xs:element ref="ns1:bit_field"/>
        <xs:element ref="ns1:fixed_length_string"/>
        <xs:element ref="ns1:variable_length_string"/>
        <xs:element ref="ns1:variable_length_field"/>
        <xs:element ref="ns1:variable_format_field"/>
        <xs:element ref="ns1:declared_message_def"/>
        <xs:element ref="ns1:declared_event_def"/>
        <xs:element ref="ns1:declared_header"/>
        <xs:element ref="ns1:declared_body"/>
        <xs:element ref="ns1:declared_footer"/>
        <xs:element ref="ns1:declared_list"/>
        <xs:element ref="ns1:declared_sequence"/>
        <xs:element ref="ns1:declared_variant"/>
        <xs:element ref="ns1:declared_record"/>
        <xs:element ref="ns1:declared_array"/>
        <xs:element ref="ns1:declared_fixed_field"/>
        <xs:element ref="ns1:declared_variable_field"/>
        <xs:element ref="ns1:declared_bit_field"/>
        <xs:element ref="ns1:declared_fixed_length_string"/>
        <xs:element ref="ns1:declared_variable_length_string"/>
        <xs:element ref="ns1:declared_variable_length_field"/>
        <xs:element ref="ns1:declared_variable_format_field"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" type="xs:anyURI"/>
    <xs:attribute name="version" type="ns1:version_num"/>
  </xs:complexType>
  <xs:complexType name="tp_declared_type_set_ref">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="id" use="required" type="xs:anyURI"/>
    <xs:attribute name="version" use="required" type="ns1:version_num"/>
  </xs:complexType>
  <xs:attributeGroup name="attribute_declared_type">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="declared_type_ref" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:attributeGroup>
  <xs:element name="declared_message_def" type="ns1:tp_declared_message_def"/>
  <xs:complexType name="tp_declared_message_def">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
  </xs:complexType>
  <xs:element name="declared_event_def" type="ns1:tp_declared_event_def"/>
  <xs:complexType name="tp_declared_event_def">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
  </xs:complexType>
  <xs:element name="declared_header" type="ns1:tp_declared_header"/>
  <xs:complexType name="tp_declared_header">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
  </xs:complexType>
  <xs:element name="declared_body" type="ns1:tp_declared_body"/>
  <xs:complexType name="tp_declared_body">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
  </xs:complexType>
  <xs:element name="declared_footer" type="ns1:tp_declared_footer"/>
  <xs:complexType name="tp_declared_footer">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
  </xs:complexType>
  <xs:element name="declared_variant" type="ns1:tp_declared_variant"/>
  <xs:complexType name="tp_declared_variant">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_sequence" type="ns1:tp_declared_sequence"/>
  <xs:complexType name="tp_declared_sequence">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_record" type="ns1:tp_declared_record"/>
  <xs:complexType name="tp_declared_record">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_list" type="ns1:tp_declared_list"/>
  <xs:complexType name="tp_declared_list">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_array" type="ns1:tp_declared_array"/>
  <xs:complexType name="tp_declared_array">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_fixed_field" type="ns1:tp_declared_fixed_field"/>
  <xs:complexType name="tp_declared_fixed_field">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_variable_field" type="ns1:tp_declared_variable_field"/>
  <xs:complexType name="tp_declared_variable_field">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_bit_field" type="ns1:tp_declared_bit_field"/>
  <xs:complexType name="tp_declared_bit_field">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_fixed_length_string" type="ns1:tp_declared_fixed_length_string"/>
  <xs:complexType name="tp_declared_fixed_length_string">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_variable_length_string" type="ns1:tp_declared_variable_length_string"/>
  <xs:complexType name="tp_declared_variable_length_string">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_variable_length_field" type="ns1:tp_declared_variable_length_field"/>
  <xs:complexType name="tp_declared_variable_length_field">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="declared_variable_format_field" type="ns1:tp_declared_variable_format_field"/>
  <xs:complexType name="tp_declared_variable_format_field">
    <xs:attributeGroup ref="ns1:attribute_declared_type"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
  </xs:complexType>
  <!-- ==================== message definition ========================= -->
  <xs:element name="message_set" type="ns1:tp_message_set"/>
  <xs:complexType name="tp_message_set">
    <xs:sequence>
      <xs:element ref="ns1:input_set"/>
      <xs:element ref="ns1:output_set"/>
    </xs:sequence>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="input_set" type="ns1:tp_input_set"/>
  <xs:complexType name="tp_input_set">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ns1:message_def"/>
      <xs:element ref="ns1:declared_message_def"/>
    </xs:choice>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="output_set" type="ns1:tp_output_set"/>
  <xs:complexType name="tp_output_set">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ns1:message_def"/>
      <xs:element ref="ns1:declared_message_def"/>
    </xs:choice>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="internal_events_set" type="ns1:tp_internal_events_set"/>
  <xs:complexType name="tp_internal_events_set">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ns1:event_def"/>
      <xs:element ref="ns1:declared_event_def"/>
    </xs:choice>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="message_def" type="ns1:tp_message_def"/>
  <xs:complexType name="tp_message_def">
    <xs:sequence>
      <xs:element ref="ns1:description"/>
      <xs:choice>
        <xs:element ref="ns1:header"/>
        <xs:element ref="ns1:declared_header"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="ns1:body"/>
        <xs:element ref="ns1:declared_body"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="ns1:footer"/>
        <xs:element ref="ns1:declared_footer"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="message_id" use="required" type="xs:hexBinary"/>
    <xs:attribute name="is_command" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="event_def" type="ns1:tp_event_def"/>
  <xs:complexType name="tp_event_def">
    <xs:sequence>
      <xs:element ref="ns1:description"/>
      <xs:choice>
        <xs:element ref="ns1:header"/>
        <xs:element ref="ns1:declared_header"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="ns1:body"/>
        <xs:element ref="ns1:declared_body"/>
      </xs:choice>
      <xs:choice>
        <xs:element ref="ns1:footer"/>
        <xs:element ref="ns1:declared_footer"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
  </xs:complexType>
  <xs:element name="header" type="ns1:tp_header"/>
  <xs:complexType name="tp_header">
    <xs:choice minOccurs="0">
      <xs:element ref="ns1:record"/>
      <xs:element ref="ns1:declared_record"/>
      <xs:element ref="ns1:list"/>
      <xs:element ref="ns1:declared_list"/>
      <xs:element ref="ns1:variant"/>
      <xs:element ref="ns1:declared_variant"/>
      <xs:element ref="ns1:sequence"/>
      <xs:element ref="ns1:declared_sequence"/>
    </xs:choice>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="body" type="ns1:tp_body"/>
  <xs:complexType name="tp_body">
    <xs:choice minOccurs="0">
      <xs:element ref="ns1:record"/>
      <xs:element ref="ns1:declared_record"/>
      <xs:element ref="ns1:list"/>
      <xs:element ref="ns1:declared_list"/>
      <xs:element ref="ns1:variant"/>
      <xs:element ref="ns1:declared_variant"/>
      <xs:element ref="ns1:sequence"/>
      <xs:element ref="ns1:declared_sequence"/>
    </xs:choice>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="footer" type="ns1:tp_footer"/>
  <xs:complexType name="tp_footer">
    <xs:choice minOccurs="0">
      <xs:element ref="ns1:record"/>
      <xs:element ref="ns1:declared_record"/>
      <xs:element ref="ns1:list"/>
      <xs:element ref="ns1:declared_list"/>
      <xs:element ref="ns1:variant"/>
      <xs:element ref="ns1:declared_variant"/>
      <xs:element ref="ns1:sequence"/>
      <xs:element ref="ns1:declared_sequence"/>
    </xs:choice>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="array" type="ns1:tp_array"/>
  <xs:complexType name="tp_array">
    <xs:sequence>
      <xs:choice>
        <xs:element ref="ns1:fixed_field"/>
        <xs:element ref="ns1:variable_field"/>
        <xs:element ref="ns1:bit_field"/>
        <xs:element ref="ns1:fixed_length_string"/>
        <xs:element ref="ns1:variable_length_string"/>
        <xs:element ref="ns1:variable_length_field"/>
        <xs:element ref="ns1:variable_format_field"/>
        <xs:element ref="ns1:declared_fixed_field"/>
        <xs:element ref="ns1:declared_variable_field"/>
        <xs:element ref="ns1:declared_bit_field"/>
        <xs:element ref="ns1:declared_fixed_length_string"/>
        <xs:element ref="ns1:declared_variable_length_string"/>
        <xs:element ref="ns1:declared_variable_length_field"/>
        <xs:element ref="ns1:declared_variable_format_field"/>
      </xs:choice>
      <xs:element maxOccurs="unbounded" ref="ns1:dimension"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="dimension" type="ns1:tp_dimension"/>
  <xs:complexType name="tp_dimension">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="size" use="required" type="ns1:tp_dimension_size"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_dimension_size">
    <xs:union memberTypes="ns1:identifier_ns xs:unsignedInt"/>
  </xs:simpleType>
  <xs:element name="record" type="ns1:tp_record"/>
  <xs:complexType name="tp_record">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:presence_vector"/>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="ns1:array"/>
        <xs:element ref="ns1:fixed_field"/>
        <xs:element ref="ns1:variable_field"/>
        <xs:element ref="ns1:bit_field"/>
        <xs:element ref="ns1:fixed_length_string"/>
        <xs:element ref="ns1:variable_length_string"/>
        <xs:element ref="ns1:variable_length_field"/>
        <xs:element ref="ns1:variable_format_field"/>
        <xs:element ref="ns1:declared_array"/>
        <xs:element ref="ns1:declared_fixed_field"/>
        <xs:element ref="ns1:declared_variable_field"/>
        <xs:element ref="ns1:declared_bit_field"/>
        <xs:element ref="ns1:declared_fixed_length_string"/>
        <xs:element ref="ns1:declared_variable_length_string"/>
        <xs:element ref="ns1:declared_variable_length_field"/>
        <xs:element ref="ns1:declared_variable_format_field"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="list" type="ns1:tp_list"/>
  <xs:complexType name="tp_list">
    <xs:sequence>
      <xs:element ref="ns1:count_field"/>
      <xs:choice>
        <xs:element ref="ns1:record"/>
        <xs:element ref="ns1:declared_record"/>
        <xs:element ref="ns1:list"/>
        <xs:element ref="ns1:declared_list"/>
        <xs:element ref="ns1:variant"/>
        <xs:element ref="ns1:declared_variant"/>
        <xs:element ref="ns1:sequence"/>
        <xs:element ref="ns1:declared_sequence"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="variant" type="ns1:tp_variant"/>
  <xs:complexType name="tp_variant">
    <xs:sequence>
      <xs:element ref="ns1:vtag_field"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="ns1:record"/>
        <xs:element ref="ns1:declared_record"/>
        <xs:element ref="ns1:list"/>
        <xs:element ref="ns1:declared_list"/>
        <xs:element ref="ns1:variant"/>
        <xs:element ref="ns1:declared_variant"/>
        <xs:element ref="ns1:sequence"/>
        <xs:element ref="ns1:declared_sequence"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="sequence" type="ns1:tp_sequence"/>
  <xs:complexType name="tp_sequence">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:presence_vector"/>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="ns1:record"/>
        <xs:element ref="ns1:declared_record"/>
        <xs:element ref="ns1:list"/>
        <xs:element ref="ns1:declared_list"/>
        <xs:element ref="ns1:variant"/>
        <xs:element ref="ns1:declared_variant"/>
        <xs:element ref="ns1:sequence"/>
        <xs:element ref="ns1:declared_sequence"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="fixed_field" type="ns1:tp_fixed_field"/>
  <xs:complexType name="tp_fixed_field">
    <xs:choice minOccurs="0">
      <xs:element ref="ns1:scale_range"/>
      <xs:element name="value_set" type="ns1:tp_value_set"/>
    </xs:choice>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attributeGroup ref="ns1:attribute_field_type"/>
    <xs:attributeGroup ref="ns1:attribute_field_units"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="variable_field" type="ns1:tp_variable_field"/>
  <xs:complexType name="tp_variable_field">
    <xs:sequence>
      <xs:element ref="ns1:type_and_units_field"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="type_and_units_field" type="ns1:tp_type_and_units_field"/>
  <xs:complexType name="tp_type_and_units_field">
    <xs:sequence>
      <xs:element name="type_and_units_enum" maxOccurs="unbounded" type="ns1:tp_type_and_units_enum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="bit_field" type="ns1:tp_bit_field"/>
  <xs:complexType name="tp_bit_field">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ns1:sub_field"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attributeGroup ref="ns1:attribute_field_type_unsigned"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="fixed_length_string" type="ns1:tp_fixed_length_string"/>
  <xs:complexType name="tp_fixed_length_string">
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="string_length" use="required" type="ns1:tp_string_length"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_string_length">
    <xs:union memberTypes="ns1:identifier_ns xs:unsignedInt"/>
  </xs:simpleType>
  <xs:element name="variable_length_string" type="ns1:tp_variable_length_string"/>
  <xs:complexType name="tp_variable_length_string">
    <xs:sequence>
      <xs:element ref="ns1:count_field"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="variable_length_field" type="ns1:tp_variable_length_field"/>
  <xs:complexType name="tp_variable_length_field">
    <xs:sequence>
      <xs:element ref="ns1:count_field"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attributeGroup ref="ns1:attribute_field_format"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="variable_format_field" type="ns1:tp_variable_format_field"/>
  <xs:complexType name="tp_variable_format_field">
    <xs:sequence>
      <xs:element ref="ns1:format_field"/>
      <xs:element ref="ns1:count_field"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="optional" use="required" type="xs:boolean"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="count_field" type="ns1:tp_count_field"/>
  <xs:complexType name="tp_count_field">
    <xs:attributeGroup ref="ns1:attribute_field_type_unsigned"/>
    <xs:attribute name="min_count" type="ns1:tp_min_count"/>
    <xs:attribute name="max_count" type="ns1:tp_max_count"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_min_count">
    <xs:union memberTypes="ns1:identifier_ns xs:unsignedInt"/>
  </xs:simpleType>
  <xs:simpleType name="tp_max_count">
    <xs:union memberTypes="ns1:identifier_ns xs:unsignedInt"/>
  </xs:simpleType>
  <xs:element name="vtag_field" type="ns1:tp_vtag_field"/>
  <xs:complexType name="tp_vtag_field">
    <xs:attributeGroup ref="ns1:attribute_field_type_unsigned"/>
    <xs:attribute name="min_count" type="ns1:tp_min_count"/>
    <xs:attribute name="max_count" type="ns1:tp_max_count"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="sub_field" type="ns1:tp_sub_field"/>
  <xs:complexType name="tp_sub_field">
    <xs:sequence>
      <xs:element ref="ns1:bit_range"/>
      <xs:element name="value_set" type="ns1:tp_value_set"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="format_field" type="ns1:tp_format_field"/>
  <xs:complexType name="tp_format_field">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ns1:format_enum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="presence_vector" type="ns1:tp_presence_vector"/>
  <xs:complexType name="tp_presence_vector">
    <xs:attributeGroup ref="ns1:attribute_field_type_unsigned"/>
  </xs:complexType>
  <xs:attributeGroup name="attribute_field_type">
    <xs:attribute name="field_type" use="required" type="ns1:tp_field_type"/>
  </xs:attributeGroup>
  <xs:simpleType name="tp_field_type">
    <xs:restriction base="xs:token">
      <xs:enumeration value="byte"/>
      <xs:enumeration value="short integer"/>
      <xs:enumeration value="integer"/>
      <xs:enumeration value="long integer"/>
      <xs:enumeration value="unsigned byte"/>
      <xs:enumeration value="unsigned short integer"/>
      <xs:enumeration value="unsigned integer"/>
      <xs:enumeration value="unsigned long integer"/>
      <xs:enumeration value="float"/>
      <xs:enumeration value="long float"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="attribute_field_type_unsigned">
    <xs:attribute name="field_type_unsigned" use="required" type="ns1:tp_field_type_unsigned"/>
  </xs:attributeGroup>
  <xs:simpleType name="tp_field_type_unsigned">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unsigned byte"/>
      <xs:enumeration value="unsigned short integer"/>
      <xs:enumeration value="unsigned integer"/>
      <xs:enumeration value="unsigned long integer"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="attribute_field_units">
    <xs:attribute name="field_units" use="required" type="ns1:tp_field_units"/>
  </xs:attributeGroup>
  <xs:simpleType name="tp_field_units">
    <xs:restriction base="xs:token">
      <xs:enumeration value="meter"/>
      <xs:enumeration value="kilogram"/>
      <xs:enumeration value="ampere"/>
      <xs:enumeration value="kelvin"/>
      <xs:enumeration value="mole"/>
      <xs:enumeration value="candela"/>
      <xs:enumeration value="square meter"/>
      <xs:enumeration value="cubic meter"/>
      <xs:enumeration value="meter per second"/>
      <xs:enumeration value="meter per second squared"/>
      <xs:enumeration value="reciprocal meter"/>
      <xs:enumeration value="kilogram per cubic meter"/>
      <xs:enumeration value="cubic meter per kilogram"/>
      <xs:enumeration value="ampere per square meter"/>
      <xs:enumeration value="ampere per meter"/>
      <xs:enumeration value="mole per cubic meter"/>
      <xs:enumeration value="candela per square meter"/>
      <xs:enumeration value="one"/>
      <xs:enumeration value="radian"/>
      <xs:enumeration value="steradian"/>
      <xs:enumeration value="hertz"/>
      <xs:enumeration value="newton"/>
      <xs:enumeration value="pascal"/>
      <xs:enumeration value="joule"/>
      <xs:enumeration value="watt"/>
      <xs:enumeration value="coulomb"/>
      <xs:enumeration value="volt"/>
      <xs:enumeration value="farad"/>
      <xs:enumeration value="ohm"/>
      <xs:enumeration value="siemens"/>
      <xs:enumeration value="weber"/>
      <xs:enumeration value="tesla"/>
      <xs:enumeration value="henry"/>
      <xs:enumeration value="degree Celsius"/>
      <xs:enumeration value="lumen"/>
      <xs:enumeration value="lux"/>
      <xs:enumeration value="becquerel"/>
      <xs:enumeration value="sievert"/>
      <xs:enumeration value="katal"/>
      <xs:enumeration value="pascal second"/>
      <xs:enumeration value="newton meter"/>
      <xs:enumeration value="newton per meter"/>
      <xs:enumeration value="radian per second"/>
      <xs:enumeration value="radian per second squared"/>
      <xs:enumeration value="watt per square meter"/>
      <xs:enumeration value="joule per kelvin"/>
      <xs:enumeration value="joule per kilogram"/>
      <xs:enumeration value="kelvin"/>
      <xs:enumeration value="watt per meter kelvin"/>
      <xs:enumeration value="joule per cubic meter"/>
      <xs:enumeration value="volt per meter"/>
      <xs:enumeration value="coulomb per cubic meter"/>
      <xs:enumeration value="coulomb per square meter"/>
      <xs:enumeration value="farad per meter"/>
      <xs:enumeration value="henry per meter"/>
      <xs:enumeration value="joule per mole"/>
      <xs:enumeration value="joule per mole kelvin"/>
      <xs:enumeration value="coulomb per kilogram"/>
      <xs:enumeration value="gray per second"/>
      <xs:enumeration value="watt per square meter steradian"/>
      <xs:enumeration value="katal per cubic meter"/>
      <xs:enumeration value="minute"/>
      <xs:enumeration value="hour"/>
      <xs:enumeration value="day"/>
      <xs:enumeration value="degree"/>
      <xs:enumeration value="minute"/>
      <xs:enumeration value="second"/>
      <xs:enumeration value="liter"/>
      <xs:enumeration value="metric ton"/>
      <xs:enumeration value="neper"/>
      <xs:enumeration value="bel"/>
      <xs:enumeration value="nautical mile"/>
      <xs:enumeration value="knot"/>
      <xs:enumeration value="are"/>
      <xs:enumeration value="hectare"/>
      <xs:enumeration value="bar"/>
      <xs:enumeration value="�ngstro"/>
      <xs:enumeration value="barn"/>
      <xs:enumeration value="curie"/>
      <xs:enumeration value="roentgen"/>
      <xs:enumeration value="rad"/>
      <xs:enumeration value="rem"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="type_and_units_enum" type="ns1:tp_type_and_units_enum"/>
  <xs:attributeGroup name="attribute_field_format">
    <xs:attribute name="field_format" use="required"/>
  </xs:attributeGroup>
  <xs:element name="format_enum" type="ns1:tp_format_enum"/>
  <xs:complexType name="tp_format_enum">
    <xs:attribute name="index" use="required" type="xs:unsignedByte"/>
    <xs:attributeGroup ref="ns1:attribute_field_format"/>
  </xs:complexType>
  <xs:complexType name="tp_type_and_units_enum">
    <xs:choice minOccurs="0">
      <xs:element name="value_set" type="ns1:tp_value_set"/>
      <xs:element ref="ns1:scale_range"/>
    </xs:choice>
    <xs:attribute name="name" use="required" type="ns1:identifier"/>
    <xs:attribute name="index" use="required" type="xs:unsignedByte"/>
    <xs:attributeGroup ref="ns1:attribute_field_type"/>
    <xs:attributeGroup ref="ns1:attribute_field_units"/>
  </xs:complexType>
  <xs:complexType name="tp_value_set">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="ns1:value_range"/>
      <xs:element ref="ns1:value_enum"/>
    </xs:choice>
    <xs:attribute name="offset_to_lower_limit" use="required" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="bit_range" type="ns1:tp_bit_range"/>
  <xs:complexType name="tp_bit_range">
    <xs:attribute name="from_index" use="required" type="xs:unsignedByte"/>
    <xs:attribute name="to_index" use="required" type="xs:unsignedByte"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="scale_range" type="ns1:tp_scale_range"/>
  <xs:complexType name="tp_scale_range">
    <xs:attribute name="real_lower_limit" use="required"/>
    <xs:attribute name="real_upper_limit" use="required"/>
    <xs:attribute name="integer_function" use="required" type="ns1:tp_integer_function"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_integer_function">
    <xs:restriction base="xs:token">
      <xs:enumeration value="floor"/>
      <xs:enumeration value="round"/>
      <xs:enumeration value="ceiling"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="value_range" type="ns1:tp_value_range"/>
  <xs:complexType name="tp_value_range">
    <xs:attribute name="lower_limit" use="required"/>
    <xs:attribute name="lower_limit_type" use="required" type="ns1:tp_lower_limit_type"/>
    <xs:attribute name="upper_limit" use="required"/>
    <xs:attribute name="upper_limit_type" use="required" type="ns1:tp_upper_limit_type"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:simpleType name="tp_lower_limit_type">
    <xs:restriction base="xs:token">
      <xs:enumeration value="inclusive"/>
      <xs:enumeration value="exclusive"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp_upper_limit_type" >
    <xs:restriction base="xs:token">
      <xs:enumeration value="inclusive"/>
      <xs:enumeration value="exclusive"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="value_enum" type="ns1:tp_value_enum"/>
  <xs:complexType name="tp_value_enum">
    <xs:attribute name="enum_index" use="required" type="xs:long"/>
    <xs:attribute name="enum_const" use="required" type="xs:string"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="protocol_behavior" type="ns1:tp_protocol_behavior"/>
  <xs:complexType name="tp_protocol_behavior">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="ns1:start"/>
      <xs:element maxOccurs="unbounded" ref="ns1:state_machine"/>
    </xs:sequence>
    <xs:attribute name="is_stateless" type="xs:boolean"/>
  </xs:complexType>
  <xs:element name="start" type="ns1:tp_start"/>
  <xs:complexType name="tp_start">
    <xs:attribute name="state_machine_name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="state_name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="state_machine" type="ns1:tp_state_machine"/>
  <xs:complexType name="tp_state_machine">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:state"/>
      <xs:element minOccurs="0" ref="ns1:default_state"/>
      <xs:element minOccurs="0" ref="ns1:pseudo_start_state"/>
      <xs:element minOccurs="0" ref="plus:mxCell"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="state" type="ns1:tp_state"/>
  <xs:complexType name="tp_state">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:entry"/>
      <xs:element minOccurs="0" ref="ns1:exit"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:transition"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:default_transition"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:state"/>
      <xs:element minOccurs="0" ref="ns1:default_state"/>
      <xs:element minOccurs="0" ref="ns1:pseudo_start_state"/>
      <xs:element minOccurs="0" ref="plus:mxCell"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="initial_state" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="pseudo_start_state" type="ns1:tp_pseudo_start_state"/>
  <xs:complexType name="tp_pseudo_start_state">
    <xs:sequence>
      <xs:element minOccurs="0" name="state" type="ns1:tp_pseudo_state"/>
      <xs:element minOccurs="0" name="transition" type="ns1:tp_pseudo_transition"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="tp_pseudo_state">
    <xs:sequence>
      <xs:element ref="plus:mxCell"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="tp_pseudo_transition">
    <xs:sequence>
      <xs:element ref="plus:mxCell"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="default_state" type="ns1:tp_default_state"/>
  <xs:complexType name="tp_default_state">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:transition"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:default_transition"/>
      <xs:element minOccurs="0" ref="plus:mxCell"/>
    </xs:sequence>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="default_transition" type="ns1:tp_default_transition"/>
  <xs:complexType name="tp_default_transition">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:guard"/>
      <xs:choice>
        <xs:element ref="version_1_1:internal"/>
        <xs:element ref="ns1:simple"/>
        <xs:element ref="ns1:push"/>
        <xs:element ref="ns1:pop"/>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="ns1:action"/>
        <xs:element ref="ns1:send_action"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="plus:mxCell"/>
    </xs:sequence>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="entry" type="ns1:tp_entry"/>
  <xs:complexType name="tp_entry">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ns1:action"/>
      <xs:element ref="ns1:send_action"/>
    </xs:choice>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="exit" type="ns1:tp_exit"/>
  <xs:complexType name="tp_exit">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="ns1:action"/>
      <xs:element ref="ns1:send_action"/>
    </xs:choice>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="transition" type="ns1:tp_transition"/>
  <xs:complexType name="tp_transition">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:parameter"/>
      <xs:element minOccurs="0" ref="ns1:guard"/>
      <xs:choice>
        <xs:element ref="version_1_1:internal"/>
        <xs:element ref="ns1:simple"/>
        <xs:element ref="ns1:push"/>
        <xs:element ref="ns1:pop"/>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="ns1:action"/>
        <xs:element ref="ns1:send_action"/>
      </xs:choice>
      <xs:element minOccurs="0" ref="plus:mxCell"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="simple" type="ns1:tp_simple"/>
  <xs:complexType name="tp_simple">
    <xs:sequence>
      <xs:element minOccurs="0" ref="ns1:end_state"/>
    </xs:sequence>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="push" type="ns1:tp_push"/>
  <xs:complexType name="tp_push">
    <xs:sequence>
      <xs:element ref="ns1:end_state"/>
      <xs:element minOccurs="0" ref="ns1:simple"/>
    </xs:sequence>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="pop" type="ns1:tp_pop"/>
  <xs:complexType name="tp_pop">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:argument"/>
    </xs:sequence>
    <xs:attribute name="transition" type="ns1:identifier"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="argument" type="ns1:tp_argument"/>
  <xs:complexType name="tp_argument">
    <xs:attribute name="value" use="required"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="guard" type="ns1:tp_guard"/>
  <xs:complexType name="tp_guard">
    <xs:attribute name="condition" use="required"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="end_state" type="ns1:tp_end_state"/>
  <xs:complexType name="tp_end_state">
    <xs:attribute name="state" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="parameter" type="ns1:tp_parameter"/>
  <xs:complexType name="tp_parameter">
    <xs:attribute name="type" use="required" type="ns1:param_type"/>
    <xs:attribute name="value" use="required"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="action" type="ns1:tp_action"/>
  <xs:complexType name="tp_action">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:argument"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <xs:element name="send_action" type="ns1:tp_send_action"/>
  <xs:complexType name="tp_send_action">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="ns1:argument"/>
    </xs:sequence>
    <xs:attribute name="name" use="required" type="ns1:identifier_ns"/>
    <xs:attribute name="interpretation"/>
  </xs:complexType>
  <!--
    An identifier is a sequence of letters and digits. The first character
    must be a letter or the underscore character _. Upper and lower 
    case letters are different, and identifiers may have any length.
  -->
  <xs:simpleType name="identifier">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z_][a-zA-Z_0-9]*"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- namespaced identifier ( identifier(.identifier)* ) -->
  <xs:simpleType name="identifier_ns">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z_][a-zA-Z_0-9.]*"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- param type -->
  <xs:simpleType name="param_type">
    <xs:union memberTypes="ns1:tp_unsigned_byte ns1:tp_unsigned_short ns1:tp_unsigned_int ns1:tp_unsigned_long ns1:tp_string">
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="tp_unsigned_byte">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unsigned byte"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp_unsigned_short">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unsigned short"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp_unsigned_int">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unsigned int"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp_unsigned_long">
    <xs:restriction base="xs:token">
      <xs:enumeration value="unsigned long"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="tp_string">
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z_][a-zA-Z_0-9.]*"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- M.N, where M and N are positive integers. -->
  <xs:simpleType name="version_num">
    <xs:restriction base="xs:string">
      <xs:pattern value="(0|[1-9]([0-9]*))\.(0|[1-9]([0-9]*))"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- A valid version number M.N or *.* or combination of both. -->
  <xs:simpleType name="version_num_ref">
    <xs:restriction base="xs:string">
      <xs:pattern value="((0|\*|[1-9]([0-9]*)))\.((0|\*|[1-9]([0-9]*)))"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
